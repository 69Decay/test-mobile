-- üü¢ LOAD RAYFIELD UI LIBRARY
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- üü¢ CREATE MAIN WINDOW (SHADOW HUB üåë)
local Window = Rayfield:CreateWindow({
   Name = "üåë SHADOW HUB ~ MOBILE VERSION",
   Icon = nil,
   LoadingTitle = "üåë WELCOME TO SHADOW HUB MOBILE...",
   LoadingSubtitle = "LOADING SCRIPTS & FEATURES ‚öôÔ∏è",
   Theme = "Ocean",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = false,
      FolderName = "ShadowHub",
      FileName = "ShadowHub_Config"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "üåë SHADOW HUB | KEY SYSTEM ~ MOBILE üîë",
      Subtitle = "ENTER YOUR KEY TO CONTINUE",
      Note = "JOIN OUR DISCORD FOR THE LATEST KEY!",
      FileName = "ShadowHub_Key",
      SaveKey = true,
      GrabKeyFromSite = true,
      Key = {"https://pastebin.com/raw/rvEuneZj"}
   }
})

-- üü¢ CREATE TABS
local AutoFarmTab = Window:CreateTab("üçΩÔ∏è AUTO FARM", nil)

-- üü¢ SERVICES
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ProximityPromptService = game:GetService("ProximityPromptService")
local Camera = workspace.CurrentCamera

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local autoFarmEnabled = false
local instantInteractEnabled = false
local spamEConnection
local spinConnection
local noclipEnabled = false
local noclipConnection
local instantInteractConnection

-- üü¢ SAFE FLY FUNCTION
local function flyTo(destination)
    if not rootPart then return end
    local speed = 30
    local targetPosition = destination - Vector3.new(0, 3, 0)
    local function smoothMove(target)
        local distance = (target - rootPart.Position).Magnitude
        local flightTime = distance / speed
        local startPos = rootPart.Position
        local startTime = tick()
        while tick() - startTime < flightTime do
            local progress = math.clamp((tick() - startTime) / flightTime, 0, 1)
            rootPart.CFrame = CFrame.new(startPos:Lerp(target, progress))
            task.wait(0.02)
        end
        rootPart.CFrame = CFrame.new(target)
    end
    smoothMove(targetPosition)
end

-- üü¢ MOBILE AUTO FARM (TP SPEED 30, ONE-TIME TELEPORT, SPIN, AUTO "E" PRESS)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ProximityPromptService = game:GetService("ProximityPromptService")

local player = Players.LocalPlayer
local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera
local autoFarmEnabled = false
local spinConnection = nil
local pressEConnection = nil
local instantInteractConnection = nil

-- Enable Instant Interact (No Hold Time)
local function enableInstantInteract()
    instantInteractConnection = ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
        prompt.HoldDuration = 0
        prompt.RequiresLineOfSight = false
        prompt:InputHoldBegin()
        task.wait()
        prompt:InputHoldEnd()
    end)
end

-- Fast Teleport Function (Speed = 30)
local function flyTo(position)
    if rootPart then
        local distance = (rootPart.Position - position).Magnitude
        local duration = distance / 30  -- Speed = 30
        local tween = TweenService:Create(rootPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = CFrame.new(position)})
        tween:Play()
        tween.Completed:Wait()
    end
end

AutoFarmTab:CreateToggle({
    Name = "üçΩÔ∏è AUTO FARM MOBILE",
    CurrentValue = false,
    Flag = "AutoFarm",
    Callback = function(Value)
        autoFarmEnabled = Value

        if autoFarmEnabled then
            enableInstantInteract()  -- Turn on Instant Interact

            -- Teleport to First Spot
            flyTo(Vector3.new(125.7, 5.4, 1240.5))
            task.wait(2)

            -- Teleport to Second Spot (Final Location)
            flyTo(Vector3.new(120.0, 5.4, 1264.1))
            task.wait(2)

            -- Spin Camera Loop
            spinConnection = RunService.RenderStepped:Connect(function()
                Camera.CFrame = Camera.CFrame * CFrame.Angles(0, -math.rad(1), 0)
            end)

            -- Auto "E" Press Loop
            pressEConnection = RunService.RenderStepped:Connect(function()
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
            end)

        else
            -- Disable Auto Farm
            if spinConnection then spinConnection:Disconnect() spinConnection = nil end
            if pressEConnection then pressEConnection:Disconnect() pressEConnection = nil end
            if instantInteractConnection then instantInteractConnection:Disconnect() instantInteractConnection = nil end
        end
    end
})



-- üü¢ ANTI-AFK FUNCTION
local lastInputTime = tick()
local idleTimeLimit = 300 -- Time in seconds before AFK kick (e.g., 300 seconds = 5 minutes)

-- Function to reset the AFK timer whenever there is user input
local function resetAFKTimer()
    lastInputTime = tick()
end

-- Function to simulate activity (e.g., mouse move) when idle for too long
local function simulateActivity()
    while true do
        if tick() - lastInputTime > idleTimeLimit then
            -- Simulate some activity here (e.g., mouse movement)
            -- Example: Simulate a slight mouse move
            game:GetService("UserInputService").InputChanged:Fire({
                UserInputType = Enum.UserInputType.MouseMovement,
                Position = Vector2.new(0, 0) -- Move the mouse slightly
            })
            wait(60) -- Simulate activity every 60 seconds if idle for too long
        end
        wait(1)
    end
end

-- Listen for player input to reset the AFK timer
local userInputConnection
userInputConnection = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    resetAFKTimer() -- Reset AFK timer on user input
end)

-- Start Anti-AFK simulation
local simulateConnection = spawn(function()
    simulateActivity()
end)

-- üü¢ FUNCTION TO END THE SCRIPT AND CLEAN UP
local function endScript()
    -- Disconnect connections to stop the script
    if userInputConnection then
        userInputConnection:Disconnect()
        userInputConnection = nil
    end

    -- Stop the simulateActivity function
    if simulateConnection then
        simulateConnection:Disconnect()
        simulateConnection = nil
    end

    print("Anti-AFK script has been ended and cleaned up.")
end

-- Call the endScript function when you want to stop the Anti-AFK script
-- Example: endScript() -- This would stop the script

-- If you want it to stop when the player leaves, you can use:
game.Players.LocalPlayer.AncestryChanged:Connect(function(_, parent)
    if not parent then
        endScript() -- End the script when the player leaves
    end
end)
